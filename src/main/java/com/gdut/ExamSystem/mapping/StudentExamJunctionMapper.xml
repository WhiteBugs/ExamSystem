<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdut.ExamSystem.dao.StudentExamJunctionMapper">
  <resultMap id="BaseResultMap" type="com.gdut.ExamSystem.model.StudentExamJunction">
    <id column="Student_ID" jdbcType="BIGINT" property="studentId" />
    <id column="Exam_ID" jdbcType="VARCHAR" property="examId" />
    <result column="score" jdbcType="INTEGER" property="score" />
  </resultMap>
  <sql id="Base_Column_List">
    Student_ID, Exam_ID, score
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.gdut.ExamSystem.model.StudentExamJunctionKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student_exam_junction
    where Student_ID = #{studentId,jdbcType=BIGINT}
      and Exam_ID = #{examId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.gdut.ExamSystem.model.StudentExamJunctionKey">
    delete from student_exam_junction
    where Student_ID = #{studentId,jdbcType=BIGINT}
      and Exam_ID = #{examId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.gdut.ExamSystem.model.StudentExamJunction">
    insert into student_exam_junction (Student_ID, Exam_ID, score
      )
    values (#{studentId,jdbcType=BIGINT}, #{examId,jdbcType=VARCHAR}, #{score,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gdut.ExamSystem.model.StudentExamJunction">
    insert into student_exam_junction
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        Student_ID,
      </if>
      <if test="examId != null">
        Exam_ID,
      </if>
      <if test="score != null">
        score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        #{studentId,jdbcType=BIGINT},
      </if>
      <if test="examId != null">
        #{examId,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gdut.ExamSystem.model.StudentExamJunction">
    update student_exam_junction
    <set>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
    </set>
    where Student_ID = #{studentId,jdbcType=BIGINT}
      and Exam_ID = #{examId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gdut.ExamSystem.model.StudentExamJunction">
    update student_exam_junction
    set score = #{score,jdbcType=INTEGER}
    where Student_ID = #{studentId,jdbcType=BIGINT}
      and Exam_ID = #{examId,jdbcType=VARCHAR}
  </update>
  
  <delete id="deleteByExamID" parameterType="java.lang.String">
    delete from student_exam_junction
      where Exam_ID = #{examId,jdbcType=VARCHAR}
  </delete>

  <select id="findAllStudentIDByExamID" parameterType="java.lang.String" resultType="java.lang.Long">
    select Student_ID from student_exam_junction
     where Exam_ID=#{examId,jdbcType=VARCHAR}
  </select>
  <select id="findOneStudentIDInExam" parameterType="com.gdut.ExamSystem.model.StudentExamJunctionKey" resultType="java.lang.Long">
    select Student_ID from student_exam_junction
     where Exam_ID=#{examId,jdbcType=VARCHAR}
       and Student_ID=#{studentId,jdbcType=BIGINT}
  </select>
  <select id="findStudentAllExam" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
     from student_exam_junction
      where Student_ID=#{studentId,jdbcType=BIGINT}
  </select>
  <select id="findStudentScoreBelow" resultType="java.lang.Long">
    select Student_ID from student_exam_junction
      where Exam_ID=#{examId,jdbcType=VARCHAR}
      and score &lt; #{score,jdbcType=INTEGER}
  </select>
  <select id="findStudentScoreHiger" resultType="java.lang.Long">
    select Student_ID from student_exam_junction
      where Exam_ID=#{examId,jdbcType=VARCHAR}
      and score &gt; #{score,jdbcType=INTEGER}
  </select>
  <select id="findStudentScoreBetween" resultType="java.lang.Long">
    select Student_ID from student_exam_junction
      where Exam_ID=#{examId,jdbcType=VARCHAR}
      and score &lt; #{highScore,jdbcType=INTEGER}
      and score &gt; #{lowScore,jdbcType=INTEGER}
  </select>
</mapper>